{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\Vaccination System\\\\reactjs\\\\src\\\\components\\\\Charts.js\",\n  _s = $RefreshSig$();\n// // create simple page to display Hello World\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport BarChart from './BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Charts = () => {\n  _s();\n  // store data from api endpoint into variable using fetch \n  const [people, getPeople] = useState([{}]);\n  useEffect(() => {\n    fetch('http://localhost:3001/data').then(res => res.json()).then(data => {\n      getPeople(data);\n    });\n  }, []);\n  console.log(people);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Charts, \"bFOeXs6tYS6OGB83s2Rjq4GaL84=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["React","useEffect","useState","BarChart","jsxDEV","_jsxDEV","Charts","_s","people","getPeople","fetch","then","res","json","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programs/Vaccination System/reactjs/src/components/Charts.js"],"sourcesContent":["// // create simple page to display Hello World\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport BarChart from './BarChart';\r\n\r\n\r\n\r\nconst Charts = () => { \r\n\r\n  // store data from api endpoint into variable using fetch \r\n  const [people, getPeople] = useState([{}]);\r\n  useEffect(()=>{\r\n    fetch('http://localhost:3001/data')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      getPeople(data);\r\n    })\r\n  },[]);\r\n\r\n  console.log(people);\r\n   \r\n  return (\r\n    <div>\r\n      <h1>People</h1>\r\n      <br></br>\r\n\r\n       {/*create table to display data from json variable people  */}\r\n      {/* <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Id</th>\r\n            <th>Name</th>\r\n            <th>Is Vaccinated</th>\r\n            <th>Birthdate</th>\r\n            <th>Gender</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {people.map((person) => (\r\n            <tr key={person.id}>\r\n              <td>{person.id}</td>\r\n              <td>{person.name}</td>\r\n              <td>{person.is_vaccinated}</td>\r\n              <td>{person.birthdate}</td>\r\n              <td>{person.gender}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table> */}\r\n\r\n      <BarChart/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Charts;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1CD,SAAS,CAAC,MAAI;IACZS,KAAK,CAAC,4BAA4B,CAAC,CAClCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZL,SAAS,CAACK,IAAI,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC,EAAC,EAAE,CAAC;EAELC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC;EAEnB,oBACEH,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACfhB,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,eA0BThB,OAAA,CAACF,QAAQ;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEV,CAAC;AAAAd,EAAA,CA9CKD,MAAM;AAAAgB,EAAA,GAANhB,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}