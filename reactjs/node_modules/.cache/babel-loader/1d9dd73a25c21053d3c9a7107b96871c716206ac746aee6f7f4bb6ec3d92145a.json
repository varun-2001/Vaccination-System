{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\Vaccination System\\\\reactjs\\\\src\\\\components\\\\BarChart.js\";\nimport React, { useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = () => {\n  // const [people, getPeople] = useState([{}]);\n  // useEffect(()=>{\n  //   fetch('http://localhost:3001/data')\n  //   .then(res => res.json())\n  //   .then(data => {\n  //     getPeople(data);\n  //   })\n  // },[]);\n  const people = [{\n    \"id\": 1,\n    \"name\": \"Varun \",\n    \"is_vaccinated\": true,\n    \"birthdate\": \"2001-05-12T18:30:00.000Z\",\n    \"gender\": \"Male\"\n  }, {\n    \"id\": 6,\n    \"name\": \"Rishab\",\n    \"is_vaccinated\": true,\n    \"birthdate\": \"2001-05-02T18:30:00.000Z\",\n    \"gender\": \"Male\"\n  }, {\n    \"id\": 7,\n    \"name\": \"Anshul\",\n    \"is_vaccinated\": true,\n    \"birthdate\": \"2001-03-23T18:30:00.000Z\",\n    \"gender\": \"Male\"\n  }];\n  console.log(people);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useEffect","Line","jsxDEV","_jsxDEV","BarChart","people","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programs/Vaccination System/reactjs/src/components/BarChart.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\nconst BarChart = () => {\r\n\r\n    // const [people, getPeople] = useState([{}]);\r\n    // useEffect(()=>{\r\n    //   fetch('http://localhost:3001/data')\r\n    //   .then(res => res.json())\r\n    //   .then(data => {\r\n    //     getPeople(data);\r\n    //   })\r\n    // },[]);\r\n   const people = [{\r\n    \"id\": 1,\r\n    \"name\": \"Varun \",\r\n    \"is_vaccinated\": true,\r\n    \"birthdate\": \"2001-05-12T18:30:00.000Z\",\r\n    \"gender\": \"Male\"\r\n},\r\n{\r\n    \"id\": 6,\r\n    \"name\": \"Rishab\",\r\n    \"is_vaccinated\": true,\r\n    \"birthdate\": \"2001-05-02T18:30:00.000Z\",\r\n    \"gender\": \"Male\"\r\n},\r\n{\r\n    \"id\": 7,\r\n    \"name\": \"Anshul\",\r\n    \"is_vaccinated\": true,\r\n    \"birthdate\": \"2001-03-23T18:30:00.000Z\",\r\n    \"gender\": \"Male\"\r\n}\r\n]\r\n    console.log(people);\r\n     \r\n    return (\r\n        <div>\r\n            <h1>Line Chart</h1>\r\n            {/* Create line chart with people variable with age on x axis and counts as y axis */}\r\n            {/* <Line\r\n                data={{\r\n                    labels: people.map((val) => {\r\n                        return val.age;\r\n                    }),\r\n                    datasets: [\r\n                        {\r\n                            label: \"Number of People\",\r\n                            data: people.map((val) => {\r\n                                return val.count;\r\n                            }),\r\n                            backgroundColor: [\r\n                                \"rgba(75, 192, 192, 0.6)\",\r\n                            ],\r\n                            borderWidth: 4\r\n                        }\r\n                    ]\r\n                }}\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    maintainAspectRatio: false\r\n                }}\r\n            /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarChart;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAExC,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAEnB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACD,MAAMC,MAAM,GAAG,CAAC;IACf,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,IAAI;IACrB,WAAW,EAAE,0BAA0B;IACvC,QAAQ,EAAE;EACd,CAAC,EACD;IACI,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,IAAI;IACrB,WAAW,EAAE,0BAA0B;IACvC,QAAQ,EAAE;EACd,CAAC,EACD;IACI,IAAI,EAAE,CAAC;IACP,MAAM,EAAE,QAAQ;IAChB,eAAe,EAAE,IAAI;IACrB,WAAW,EAAE,0BAA0B;IACvC,QAAQ,EAAE;EACd,CAAC,CACA;EACGC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EAEnB,oBACIF,OAAA;IAAAK,QAAA,eACIL,OAAA;MAAAK,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QA0BjB;AAEd,CAAC;AAAAC,EAAA,GAhEKT,QAAQ;AAkEd,eAAeA,QAAQ;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}