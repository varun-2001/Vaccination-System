{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\Vaccination System\\\\reactjs\\\\src\\\\components\\\\LineChartAge.js\",\n  _s = $RefreshSig$();\nimport { React, useEffect } from 'react';\nimport { useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\n// Create LineChartAge that plots a line chart with age on x-axis and count on y-axis\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LineChartAge = () => {\n  _s();\n  const [vaccinated, getVaccinated] = useState([{}]);\n  const [unvaccinated, getUnvaccinated] = useState([{}]);\n  useEffect(() => {\n    fetch('http://localhost:3001/counts?is_vaccinated=false').then(res => res.json()).then(data => {\n      getUnvaccinated(data);\n    });\n    fetch('http://localhost:3001/counts?is_vaccinated=true').then(res => res.json()).then(data => {\n      getVaccinated(data);\n    });\n  }, []);\n\n  // sort vaccinated data by age\n  vaccinated.sort((a, b) => {\n    return a.age - b.age;\n  });\n  let vArray = Array(14).fill(0);\n  let uArray = Array(14).fill(0);\n  console.log(vaccinated);\n\n  // sort unvaccinated data by age\n  unvaccinated.sort((a, b) => {\n    return a.age - b.age;\n  });\n  for (i of vaccinated) {}\n  const data = {\n    // create labels to account for both datasets from 14 to 29 in string\n    labels: [\"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\", \"25\", \"26\", \"27\", \"28\", \"29\"],\n    _datasets: [{\n      label: 'Vaccinated',\n      data: vaccinated.map(person => person.count),\n      fill: false,\n      backgroundColor: 'rgb(255, 192, 192)',\n      borderColor: 'rgba(255,0,0,0.6)'\n    }, {\n      label: 'Unvaccinated',\n      data: unvaccinated.map(person => person.count),\n      fill: false,\n      backgroundColor: 'rgb(255, 192, 192)',\n      borderColor: 'rgba(75, 192, 192, 0.6)'\n    }],\n    get datasets() {\n      return this._datasets;\n    },\n    set datasets(value) {\n      this._datasets = value;\n    }\n  };\n  const options = {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Line Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(LineChartAge, \"38i3my7aiefcRNzCIcHc3vYYGks=\");\n_c = LineChartAge;\nexport default LineChartAge;\nvar _c;\n$RefreshReg$(_c, \"LineChartAge\");","map":{"version":3,"names":["React","useEffect","useState","Line","jsxDEV","_jsxDEV","Fragment","_Fragment","LineChartAge","_s","vaccinated","getVaccinated","unvaccinated","getUnvaccinated","fetch","then","res","json","data","sort","a","b","age","vArray","Array","fill","uArray","console","log","i","labels","_datasets","label","map","person","count","backgroundColor","borderColor","datasets","value","options","scales","yAxes","ticks","beginAtZero","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Programs/Vaccination System/reactjs/src/components/LineChartAge.js"],"sourcesContent":["import { React, useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\n\r\n// Create LineChartAge that plots a line chart with age on x-axis and count on y-axis\r\n\r\nconst LineChartAge = () => {\r\n  const [vaccinated, getVaccinated] = useState([{}]);\r\n  const [unvaccinated, getUnvaccinated] = useState([{}]);\r\n\r\n\r\n  useEffect(()=>{\r\n    fetch('http://localhost:3001/counts?is_vaccinated=false')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      getUnvaccinated(data);\r\n    })\r\n    fetch('http://localhost:3001/counts?is_vaccinated=true')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      getVaccinated(data);\r\n    })\r\n  },[]);\r\n\r\n  // sort vaccinated data by age\r\n  vaccinated.sort((a, b) => {\r\n    return a.age - b.age;\r\n  });\r\n\r\n  let vArray = Array(14).fill(0);\r\n  let uArray = Array(14).fill(0);\r\n\r\n  console.log(vaccinated);\r\n\r\n  // sort unvaccinated data by age\r\n  unvaccinated.sort((a, b) => {\r\n    return a.age - b.age;\r\n  });\r\n\r\n  for (i of vaccinated) {\r\n  }\r\n\r\n  const data = {\r\n    // create labels to account for both datasets from 14 to 29 in string\r\n    labels : [\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\"],\r\n    \r\n    _datasets: [\r\n      {\r\n        label: 'Vaccinated',\r\n        data: vaccinated.map((person) => person.count),\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 192, 192)',\r\n        borderColor: 'rgba(255,0,0,0.6)',\r\n      },\r\n      {\r\n        label: 'Unvaccinated',\r\n        data: unvaccinated.map((person) => person.count),\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 192, 192)',\r\n        borderColor: 'rgba(75, 192, 192, 0.6)',\r\n      },\r\n    ],\r\n    get datasets() {\r\n      return this._datasets;\r\n    },\r\n    set datasets(value) {\r\n      this._datasets = value;\r\n    },\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className='header'>\r\n        <h1 className='title'>Line Chart</h1>\r\n      </div>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineChartAge;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}