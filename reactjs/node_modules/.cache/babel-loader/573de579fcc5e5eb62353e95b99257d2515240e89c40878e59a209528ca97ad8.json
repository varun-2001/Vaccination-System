{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\Vaccination System\\\\reactjs\\\\src\\\\components\\\\BarChartGender.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChartGender = () => {\n  _s();\n  const [data, setData] = React.useState({});\n  const chart = () => {\n    // initialize male array with 0s \n    let male = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let female = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let others = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    let age = [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29];\n    fetch(\"http://localhost:3001/results\").then(res => res.json()).then(res => {\n      // console.log(res);\n      // sort res by age\n      res.sort((a, b) => a.age - b.age);\n      for (const dataObj of res) {\n        // if male then push into male array\n        if (dataObj.gender === \"Male\") {\n          male[dataObj.age - 11] = dataObj.count;\n        } else if (dataObj.gender === \"Female\") {\n          female[dataObj.age - 11] = dataObj.count;\n        } else {\n          others[dataObj.age - 11] = dataObj.count;\n        }\n      }\n      setData({\n        // set labels for x-axis as 1-100 \n        labels: age,\n        datasets: [{\n          label: \"Male\",\n          data: male,\n          backgroundColor: \"rgba(0,0,255,0.5)\",\n          borderWidth: 4\n        }, {\n          label: \"Female\",\n          data: female,\n          backgroundColor: \"rgba(255, 0 , 0, 0.5)\",\n          borderWidth: 4\n        }, {\n          label: \"Other\",\n          data: others,\n          backgroundColor: \"rgba(0, 255, 0, 0.5)\",\n          borderWidth: 4\n        }]\n      });\n    });\n  };\n  React.useEffect(() => {\n    chart();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bar Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: {\n        layout: {\n          padding: 40\n        },\n        responsive: true,\n        scales: {\n          yAxes: [{\n            ticks: {\n              maxTicksLimit: 10,\n              beginAtZero: true\n            },\n            gridLines: {\n              display: false\n            }\n          }],\n          xAxes: [{\n            gridLines: {\n              display: false\n            }\n          }]\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(BarChartGender, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = BarChartGender;\nexport default BarChartGender;\nvar _c;\n$RefreshReg$(_c, \"BarChartGender\");","map":{"version":3,"names":["React","Bar","jsxDEV","_jsxDEV","BarChartGender","_s","data","setData","useState","chart","male","female","others","age","fetch","then","res","json","sort","a","b","dataObj","gender","count","labels","datasets","label","backgroundColor","borderWidth","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","options","layout","padding","responsive","scales","yAxes","ticks","maxTicksLimit","beginAtZero","gridLines","display","xAxes","_c","$RefreshReg$"],"sources":["D:/Programs/Vaccination System/reactjs/src/components/BarChartGender.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst BarChartGender = () => {\r\n    const [data, setData] = React.useState({});\r\n    \r\n    const chart = () => {\r\n        // initialize male array with 0s \r\n        let male = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n        let female = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n        let others = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\r\n        let age = [11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29];\r\n        fetch(\"http://localhost:3001/results\")\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n            // console.log(res);\r\n            // sort res by age\r\n            res.sort((a, b) => a.age - b.age);\r\n            for (const dataObj of res) {\r\n                // if male then push into male array\r\n                if (dataObj.gender===\"Male\"){\r\n                    male[dataObj.age - 11] = (dataObj.count);\r\n                }\r\n                else if (dataObj.gender===\"Female\"){\r\n                    female[dataObj.age - 11] = (dataObj.count);\r\n                }\r\n                else{\r\n                    others[dataObj.age - 11] = (dataObj.count);\r\n                }\r\n            }\r\n\r\n            setData({\r\n            // set labels for x-axis as 1-100 \r\n            labels: age,\r\n            datasets: [\r\n                {\r\n                    label: \"Male\",\r\n                    data: male,\r\n                    backgroundColor: \"rgba(0,0,255,0.5)\",\r\n                    borderWidth: 4,\r\n                },\r\n                {\r\n                    label: \"Female\",\r\n                    data: female,\r\n                    backgroundColor: \"rgba(255, 0 , 0, 0.5)\",\r\n                    borderWidth: 4,\r\n                },\r\n                {\r\n                    label: \"Other\",\r\n                    data: others,\r\n                    backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n                    borderWidth: 4,\r\n                },\r\n            ],\r\n            });\r\n        });\r\n    };\r\n    \r\n    React.useEffect(() => {\r\n        chart();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <h1>Bar Chart</h1>\r\n        <Bar\r\n            data={data}\r\n            options={{\r\n            layout:{\r\n                padding: 40,\r\n            },\r\n            responsive: true,\r\n            scales: {\r\n                yAxes: [\r\n                {\r\n                    ticks: {\r\n                    maxTicksLimit: 10,\r\n                    beginAtZero: true,\r\n                    },\r\n                    gridLines: {\r\n                    display: false,\r\n                    },\r\n                },\r\n                ],\r\n                xAxes: [\r\n                {\r\n                    gridLines: {\r\n                    display: false,\r\n                    },\r\n                },\r\n                ],\r\n            },\r\n            }}\r\n        />\r\n        </div>\r\n    );\r\n    };\r\n\r\nexport default BarChartGender;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}