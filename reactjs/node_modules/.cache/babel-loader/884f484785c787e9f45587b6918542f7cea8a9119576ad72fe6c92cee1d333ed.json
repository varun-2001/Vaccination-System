{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programs\\\\Vaccination System\\\\reactjs\\\\src\\\\components\\\\BarChart.js\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\n// import people varible from Chart.js\nimport { people } from './Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Helloo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: people.map(person => person.name),\n        datasets: [{\n          label: 'People',\n          data: people.map(person => person.id),\n          backgroundColor: ['rgba(255, 99, 132, 0.6)', 'rgba(54, 162, 235, 0.6)', 'rgba(255, 206, 86, 0.6)', 'rgba(75, 192, 192, 0.6)', 'rgba(153, 102, 255, 0.6)', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 99, 132, 0.6)']\n        }]\n      },\n      height: 400,\n      width: 600,\n      options: {\n        maintainAspectRatio: false\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = BarChart;\nexport default BarChart;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","Bar","people","jsxDEV","_jsxDEV","BarChart","children","fileName","_jsxFileName","lineNumber","columnNumber","data","labels","map","person","name","datasets","label","id","backgroundColor","height","width","options","maintainAspectRatio","_c","$RefreshReg$"],"sources":["D:/Programs/Vaccination System/reactjs/src/components/BarChart.js"],"sourcesContent":["import React from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n// import people varible from Chart.js\r\nimport { people } from './Chart';\r\n\r\n\r\n\r\nconst BarChart = () => {\r\n    return (\r\n        <div>\r\n            <h1>Helloo</h1>\r\n            {/* Create bar chart using people data */}\r\n            <Bar\r\n                data={{\r\n                    labels: people.map((person) => person.name),\r\n                    datasets: [\r\n                        {\r\n                            label: 'People',\r\n                            data: people.map((person) => person.id),\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.6)',\r\n                                'rgba(54, 162, 235, 0.6)',\r\n                                'rgba(255, 206, 86, 0.6)',\r\n                                'rgba(75, 192, 192, 0.6)',\r\n                                'rgba(153, 102, 255, 0.6)',\r\n                                'rgba(255, 159, 64, 0.6)',\r\n                                'rgba(255, 99, 132, 0.6)',\r\n                            ],\r\n                        },\r\n                    ],\r\n                }}\r\n                height={400}\r\n                width={600}\r\n                options={{\r\n                    maintainAspectRatio: false,\r\n                }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC;AACA,SAASC,MAAM,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAEfN,OAAA,CAACH,GAAG;MACAU,IAAI,EAAE;QACFC,MAAM,EAAEV,MAAM,CAACW,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC;QAC3CC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,QAAQ;UACfN,IAAI,EAAET,MAAM,CAACW,GAAG,CAAEC,MAAM,IAAKA,MAAM,CAACI,EAAE,CAAC;UACvCC,eAAe,EAAE,CACb,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,yBAAyB,EACzB,0BAA0B,EAC1B,yBAAyB,EACzB,yBAAyB;QAEjC,CAAC;MAET,CAAE;MACFC,MAAM,EAAE,GAAI;MACZC,KAAK,EAAE,GAAI;MACXC,OAAO,EAAE;QACLC,mBAAmB,EAAE;MACzB;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAEd,CAAC;AAAAc,EAAA,GAhCKnB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}